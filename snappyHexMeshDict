/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  2312
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    object      snappyHexMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

/*
 * SNAPPYHEXMESH CONFIGURATION FOR SYMMETRIC SPINNING BASEBALL
 * ===========================================================
 * 
 * This configuration ensures mesh symmetry is preserved while creating
 * high-quality boundary layers around the spinning baseball. The mesh
 * is optimized for 0.8-second simulation duration.
 */

// Which of the steps to run
castellatedMesh true;
snap            true;
addLayers       true;

// Geometry. Definition of all surfaces. All surfaces are of class
// searchableSurface.
geometry
{
    baseball
    {
        type triSurfaceMesh;
        file "baseball.stl";
        name baseball;
    }
    
    // Symmetric refinement box around baseball
    refinementBox
    {
        type searchableBox;
        min (-0.2 -0.2 -0.2);
        max ( 0.2  0.2  0.2);  // Symmetric refinement box around baseball
    }
    
    // Additional wake refinement box for Magnus effect capture
    wakeRefinementBox
    {
        type searchableBox;
        min (-0.1 -0.3 -0.3);  // Extends more in lateral directions
        max ( 0.8  0.3  0.3);  // Captures wake development
    }
}

// Settings for the castellatedMesh generation.
castellatedMeshControls
{
    // Refinement parameters - high quality mesh for accuracy
    // Increased cell caps to allow aggressive local refinement around seams.
    maxLocalCells 3000000;   // allow more local refinement near the baseball
    maxGlobalCells 8000000;  // larger global cap to avoid premature stopping
    minRefinementCells 10;   // require slightly more cells per refinement region
    maxLoadUnbalance 0.10;
    nCellsBetweenLevels 2;   // tighter transition between levels for less smoothing

    // Tolerance for point merging - ensures symmetry preservation and seam fidelity
    tolerance 1e-6;  // much tighter tolerance to avoid merging seam features

    // Enable explicit feature edge refinement from an eMesh (extract with surfaceFeatureExtract)
    features
    (
        {
            file "baseball.eMesh";
            level 12;  // very fine feature edge refinement to capture stitch geometry
        }
    );

    // Surface based refinement
    refinementSurfaces
    {
        baseball
        {
            // Very aggressive surface refinement to resolve the seams and stitches.
            // The pair (minLevel maxLevel) controls castellated refinement near the surface.
            level (12 15);
            patchInfo
            {
                type wall;
                inGroups (baseballGroup);
            }
        }
    }

    // Resolve sharp angles - important for seam/stitch capture
    resolveFeatureAngle 20;

    // Region-wise refinement - symmetric about centerlines
    refinementRegions
    {
        refinementBox
        {
            mode inside;
            levels ((1E15 3));  // Moderate refinement in the immediate vicinity of the baseball
        }
        
        wakeRefinementBox
        {
            mode inside; 
            levels ((1E15 5));  // Keep fine wake resolution
        }
    }

    // Mesh selection - positioned for symmetric flow (choose point inside refinement region)
    locationInMesh (0.0 0.0 0.0);  // point near the baseball centre for symmetry and seam capture

    // Whether any faceZones (as specified in the refinementSurfaces)
    // are only on the boundary of corresponding cellZones or also allow
    // free-standing zone faces. Not used if there are no faceZones.
    allowFreeStandingZoneFaces true;
}

// Settings for the snapping.
snapControls
{
    nSmoothPatch 3;
    tolerance 2.0;  // Balanced tolerance for symmetry preservation
    nSolveIter 30;
    nRelaxIter 5;
    nFeatureSnapIter 10;
    implicitFeatureSnap false;
    explicitFeatureSnap true;
    multiRegionFeatureSnap false;
}

// Settings for the layer addition.
addLayersControls
{
    relativeSizes true;

    // Per final patch (so not geometry!) the layer information
    layers
    {
        baseball
        {
            // Increase number of surface layers to capture steep gradients near stitches
            nSurfaceLayers 20;
            // control the thickness of each layer individually if needed (optional)
            // thickness (0.005 0.004 0.003 ...)
        }
    }

    // Expansion factor for layer mesh
    expansionRatio 1.08;  // near-uniform layers to keep resolution near seam

    // Wanted thickness of final added cell layer. If multiple layers
    // is the thickness of the layer furthest away from the wall.
    finalLayerThickness 0.02;  // much thinner to resolve seams

    // minimum thickness
    minThickness 0.001;  // allow very thin first cell near stitches

    // If points get not extruded do nGrow layers of connected faces that are
    // also not grown. This helps convergence of the layer addition process
    // close to features.
    nGrow 0;

    // Advanced settings

    // When not to extrude surface. 0 is flat surface, 90 is when two faces
    // are perpendicular
    featureAngle 60;

    // At non-patched sides allow mesh to slip if extrusion direction makes
    // angle larger than slipFeatureAngle.
    slipFeatureAngle 30;

    // Maximum number of snapping relaxation iterations. Should stop
    // before upon reaching a correct mesh.
    nRelaxIter 5;  // Increased for better symmetry

    // Number of smoothing iterations of surface normals
    nSmoothSurfaceNormals 1;

    // Number of smoothing iterations of interior mesh movement direction
    nSmoothNormals 3;

    // Smooth layer thickness over surface patches
    nSmoothThickness 10;

    // Stop layer growth on highly warped cells
    maxFaceThicknessRatio 0.5;

    // Reduce layer growth where ratio thickness to medial
    // distance is large
    maxThicknessToMedialRatio 0.3;

    // Angle used to pick up medial axis points
    // Note: changed(corrected) w.r.t 17x! 90 degrees corresponds to 130 in 17x.
    minMedialAxisAngle 90;

    // Create buffer region for new layer terminations
    nBufferCellsNoExtrude 0;

    // Overall max number of layer addition iterations. The mesher will exit
    // if it reaches this number of iterations; possibly with an illegal
    // mesh.
    nLayerIter 50;
}

// Generic mesh quality settings. At any undoable phase these determine
// where to undo.
meshQualityControls
{
    // Tightened quality controls for symmetric mesh
    maxNonOrtho 65;
    maxBoundarySkewness 20;
    maxInternalSkewness 4;
    maxConcave 80;
    minVol 1e-13;
    minTetQuality 1e-15;  // Stricter quality for symmetry
    minArea -1;
    minTwist 0.02;
    minDeterminant 0.001;
    minFaceWeight 0.02;
    minVolRatio 0.01;
    minTriangleTwist -1;

    // Advanced
    nSmoothScale 4;
    errorReduction 0.75;
    relaxed
    {
        maxNonOrtho 75;
    }
}

// Advanced
debug 0;
// Generic mesh quality settings - tight tolerance for symmetry
mergeTolerance   1e-5;  // Very tight merging for feature preservation

// ************************************************************************* //
